name: CI

on:
  push:
    branches: [dev]
  pull_request:
    branches: [master, dev]

jobs:
  setup-backend-server:
    name: Setup Backend Server
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:10
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: groupher_server_ci
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          repository: 'coderplanets/coderplanets_server'
          # Relative path under $GITHUB_WORKSPACE to place the repository
          path: 'backend_server'
      - name: Set up Elixir and OTP
        uses: actions/setup-elixir@v1
        with:
          elixir-version: '1.10.3' # Define the elixir version [required]
          otp-version: '22.3' # Define the OTP version [required]
      - name: Restore dependencies cache
        uses: actions/cache@v2
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-
      - name: deps.get
        working-directory: ./backend_server
        run: mix deps.get > /dev/null
      - name: set up test server
        working-directory: ./backend_server
        run: MIX_ENV=ci mix ecto.setup > /dev/null
      - name: seed test data
        working-directory: ./backend_server
        run: MIX_ENV=ci mix run priv/mock/cps_seeds.exs > /dev/null
      - name: ls dir
        run: ls
      - name: Run Backend Server
        working-directory: ./backend_server
        run: MIX_ENV=ci mix phx.server &

  setup-front:
    name: Setup Web Front
    runs-on: ubuntu-latest
    needs: setup-server
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          repository: 'coderplanets/coderplanets_web'
          # Relative path under $GITHUB_WORKSPACE to place the repository
          path: 'frontend_server'
      - uses: actions/setup-node@v2
        with:
          node-version: '12'
      - name: Install Packages
        working-directory: ./frontend_server
        run: yarn
      - name: Setup config tools
        working-directory: ./frontend_server
        run: chmod +x ./utils/bin/jq-linux; ./utils/bin/jq-linux -s '.[0] * .[1]' config/config.json config/config.ci.json > /tmp/config.json; cp /tmp/config.json ./config/config.json
      - name: Build Project
        working-directory: ./frontend_server
        run: npm run build.ci
      - name: Check Bundle Size
        working-directory: ./frontend_server
        run: BUNDLEWATCH_GITHUB_TOKEN=${{ secrets.BUNDLEWATCH_GITHUB_TOKEN }} npm run size.check
      - name: ls frontend_server
        working-directory: ./frontend_server
        run: ls
      - name: ls ..
        working-directory: ./frontend_server
        run: ls ..; ls ../backend_server
      - name: Run Tests
        working-directory: ./frontend_server
        run: npm run test:ci
